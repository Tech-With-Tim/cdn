name: Lint & Test

on:
  push:
    branches: '**'
  pull_request:
    branches: '**'

jobs:
  Lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: latest
          args: -e SA1029
  Test:
    name: Test
    runs-on: ubuntu-latest
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres:12
        # Provide the password for postgres
        env:
          POSTGRES_USER: twt
          POSTGRES_PASSWORD: twt
          POSTGRES_DB: twt
        ports:
          - 5432:5432
          # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        # Docker Hub image
        image: redis
        ports:
          - 6379:6379
          # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v2
      - name: Set Up Submodule
        run: |
          git submodule init
          git submodule update

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.15

      - name: Migrate
        run: go run main.go migrate_up
        env:
          DB_URI: postgres://twt:twt@localhost:5432/twt?sslmode=disable
          SECRET_KEY: mysecret
          MAX_FILE_SIZE: 30

      - name: test
        run: go test -v -p 1 -coverprofile=coverage.txt -covermode=atomic ./...
        env:
          DB_URI: postgres://twt:twt@localhost:5432/twt?sslmode=disable
          SECRET_KEY: mysecret
          MAX_FILE_SIZE: 30
          REDIS_HOST: localhost:6379
          REDIS_DB: 0
      - name: Upload to CodeCov
        run: bash <(curl -s https://codecov.io/bash)
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
